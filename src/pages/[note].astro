---
import { unified } from 'unified'
import remarkParse from 'remark-parse'
import remarkGfm from 'remark-gfm'
import remarkRehype from 'remark-rehype'
import rehypeStringify from 'rehype-stringify'
import matter from 'gray-matter'
import { remarkWikiLink } from '@portaljs/remark-wiki-link'

import { db } from '../prepare/db'

import BaseHead from '../components/BaseHead.astro'

import { slugify } from '../prepare'

export const prerender = false

const notes$ = await db.notes()
const note = await notes$.findOne({ slug: { $eq: Astro.params.note! } })

const slugs = await notes$
  .find({ slug: { $exists: true } }, { projection: { slug: 1 } })
  .map((s) => s.slug)
  .toArray()

const imageRegex = /.*\.(jpg|jpeg|png|webp|heic)$/

let html = ''

if (note) {
  const { content } = matter(note.source)

  const file = await unified()
    .use(remarkParse)
    .use(remarkGfm)
    .use(remarkWikiLink, {
      aliasDivider: '|',
      permalinks: slugs ?? [],
      pathFormat: 'obsidian-short',
      wikiLinkResolver: (name) => {
        if (imageRegex.test(name)) {
          return [`https://example.com/${name}`]
        }

        return [slugify(name)]
      },
      newClassName: 'new',
      wikiLinkClassName: 'internal',
      hrefTemplate: (name) => {
        if (imageRegex.test(name)) {
          return name
        }

        return `/${name}`
      },
    })
    .use(remarkRehype, { allowDangerousHtml: true })
    .use(rehypeStringify, { allowDangerousHtml: true })
    .process(content)

  html = file.toString()
}
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={`${note?.name ?? 'Memo'}`} description="" />
  </head>

  <body>
    <div class="text-white">
      <main
        class="flex flex-col justify-center mx-auto max-w-3xl min-h-screen px-8 break-words"
      >
        {
          note && (
            <section class="py-12 font-sans">
              <h1 class="text-2xl font-semibold text-gray-800 mb-4">
                {note.name}
              </h1>

              <article
                set:html={html}
                class="
                  leading-7
                  text-gray-800 flex flex-col gap-y-3
                  text-lg
                  [&_h1]:text-2xl
                  [&_h1]:font-semibold
                  [&_h1]:mt-6
                  [&_h1]:mb-1
                  [&_h2]:text-xl
                  [&_h2]:font-semibold
                  [&_h2]:mt-6
                  [&_pre]:whitespace-pre-wrap
                  [&_pre]:text-sm
                  [&_pre]:p-6
                  [&_pre]:text-gray-600
                  [&_pre]:leading-relaxed
                  [&_pre]:border
                  [&_pre]:rounded
                  [&_pre]:border-gray-200
                  [&_pre]:mt-2
                  [&_a]:text-gray-600
                  [&_a:hover]:text-purple-500
                  [&_a:focus]:outline-none
                  [&_a:focus]:bg-yellow-100
                  [&_a:focus]:text-yellow-900
                  [&_a:focus]:rounded
                  [&_a]:underline
                "
              />
            </section>
          )
        }

        {
          !note && (
            <h1 class="text-3xl">The page you were looking for is gone!</h1>
          )
        }
      </main>
    </div>
  </body>
</html>
