---
import { unified } from 'unified'
import remarkParse from 'remark-parse'
import remarkGfm from 'remark-gfm'
import remarkRehype from 'remark-rehype'
import rehypeStringify from 'rehype-stringify'
import matter from 'gray-matter'
import { visit } from 'unist-util-visit'
import { remarkWikiLink } from '@portaljs/remark-wiki-link'
import cx from 'classnames'

import '../styles/note.css'

import { db } from '../prepare/db'

import BaseHead from '../components/BaseHead.astro'

import { slugify } from '../prepare'
import { rehypeFigure } from '../lib/rehype-figure'

export const prerender = false

const start = performance.now()
let renderTime = 0

const notes$ = await db.notes()
const note = await notes$.findOne({ slug: { $eq: Astro.params.note! } })

const slugs = await notes$
  .find({ slug: { $exists: true } }, { projection: { slug: 1 } })
  .map((s) => s.slug)
  .toArray()

const imageRegex = /.*\.(jpg|jpeg|png|webp|heic)$/

let html = ''

const IMAGE_URL_PREFIX = 'https://images.poom.dev'

if (note) {
  const { content } = matter(note.source)

  const file = await unified()
    .use(remarkParse)
    .use(remarkGfm)
    .use(remarkWikiLink, {
      aliasDivider: '|',
      permalinks: slugs ?? [],
      pathFormat: 'obsidian-short',
      wikiLinkResolver: (name) => {
        if (imageRegex.test(name)) {
          return [name]
       }

        return [slugify(name)]
      },
      newClassName: 'new',
      wikiLinkClassName: 'internal',
      hrefTemplate: (name) => {
        if (imageRegex.test(name)) {
          return `${IMAGE_URL_PREFIX}/${name}`
        }

        return `/${name}`
      },
    })
    .use(() => (root) => {
      visit(root, 'image', n => {
        const node = n as any

        const relativeUrl = node.url.replace(/^\//, "")
        const absolutePath = `${IMAGE_URL_PREFIX}/`

        node.url = new URL(relativeUrl, absolutePath).href
      })
    })
    .use(remarkRehype, { allowDangerousHtml: true })
    .use(rehypeFigure)
    .use(() => (root) => {
      let id = 0

      visit(root, 'element', (node) => {
        const el = node as any

        if (el.tagName === 'img') {
          el.properties = {
            ...el.properties,
            className: cx(el.properties.className, 'garden-image'),

            // do not lazy load the first image!
            ...(id > 0 && {loading: 'lazy'}),
          }

          id++
        }
      })
    })
    .use(rehypeStringify, { allowDangerousHtml: true })
    .process(content)

  html = file.toString()
}

renderTime = performance.now() - start
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={`${note?.name ?? 'Memo'}`} description="" image={null} />
  </head>

  <body>
    <div class="text-white">
      <main
        class="flex flex-col justify-center mx-auto max-w-3xl min-h-screen px-8 break-words"
      >
        {
          note && (
            <section class="py-12 font-sans">
              <h1 class="text-2xl font-semibold text-gray-800 mb-4">
                {note.name}
              </h1>

              <article
                set:html={html}
                class="
                  leading-7
                  text-gray-800 flex flex-col gap-y-3
                  text-lg
                  [&_h1]:text-2xl
                  [&_h1]:font-semibold
                  [&_h1]:mt-6
                  [&_h2]:text-xl
                  [&_h2]:font-semibold
                  [&_h2]:mt-6
                  [&_pre]:whitespace-pre-wrap
                  [&_pre]:text-sm
                  [&_pre]:p-6
                  [&_pre]:text-gray-600
                  [&_pre]:leading-relaxed
                  [&_pre]:border
                  [&_pre]:rounded
                  [&_pre]:border-gray-200
                  [&_pre]:mt-2
                  [&_a]:text-gray-600
                  [&_a:hover]:text-purple-500
                  [&_a:focus]:outline-none
                  [&_a:focus]:bg-yellow-100
                  [&_a:focus]:text-yellow-900
                  [&_a:focus]:rounded
                  [&_a]:underline
                  [&_img]:rounded
                  [&_img]:my-2
                  [&_img]:object-contain
                  [&_img]:max-h-[700px]
                  [&_blockquote]:font-mono
                  [&_blockquote]:text-gray-400
                  [&_blockquote]:py-1
                  [&_blockquote]:border
                  [&_blockquote]:border-transparent
                  [&_blockquote]:border-l-gray-200
                  [&_blockquote]:border-l-4
                  [&_blockquote>p]:pl-4
                  [&_hr]:mt-6
                  [&_figure]:flex
                  [&_figure]:flex-col
                  [&_figure]:items-center
                  [&_figure]:mb-3
                  [&_figure]:mt-3
                  [&_figcaption]:mt-1
                  [&_figcaption]:text-gray-600
                "
              />
            </section>
          )
        }
      </main>

      <footer class="flex justify-between px-8 py-4 text-gray-500 font-mono mt-5">
        <div class="text-gray-300">took {renderTime.toFixed(2)}ms to render</div>
        <div>Phoomparin Mano, 2024.</div>
      </footer>
    </div>
  </body>
</html>
